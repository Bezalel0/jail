local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Aim Lock Script
getgenv().toggled = true -- true & false

getgenv().old = getgenv().old or require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList

if getgenv().toggled then
    require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList = function(...)
        local nearestDistance, nearestEnemy = 200, nil
        for _, v in pairs(Players:GetPlayers()) do
            if v.Team ~= LocalPlayer.Team and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (v.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < nearestDistance then
                    nearestDistance, nearestEnemy = distance, v
                end
            end
        end
        local args = {getgenv().old(...)}
        if (tostring(getfenv(2).script) == "BulletEmitter" or tostring(getfenv(2).script) == "Taser") and nearestEnemy then
            args[1] = nearestEnemy.Character.HumanoidRootPart
            args[2] = nearestEnemy.Character.HumanoidRootPart.Position
        end
        return unpack(args)
    end
else
    require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList = getgenv().old
end

-- ESP Functionality
local ESP = {}
ESP.Enabled = true

local function CreateESPName(player)
    local Name = Drawing.new("Text")
    Name.Text = player.Name
    Name.Size = 20
    Name.Color = Color3.new(1, 1, 1)
    Name.Center = true
    Name.Outline = true
    Name.Visible = false
    return Name
end

local function UpdateESPName(player, espName)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        espName.Visible = false
        return
    end

    local RootPart = player.Character.HumanoidRootPart
    local RootPosition, onScreen = Camera:WorldToViewportPoint(RootPart.Position)

    if onScreen and ESP.Enabled then
        espName.Position = Vector2.new(RootPosition.X, RootPosition.Y - 15)
        espName.Visible = true

        if player.Team.Name == "Police" then
            espName.Color = Color3.fromRGB(0, 0, 255)
        elseif player.Team.Name == "Criminal" then
            espName.Color = Color3.fromRGB(255, 0, 0)
        else -- Prisoner
            espName.Color = Color3.fromRGB(255, 165, 0)
        end
    else
        espName.Visible = false
    end
end

local ESPNames = {}
local MAX_DISTANCE = 500 -- Max distance for ESP updates
local MAX_VISIBLE_PLAYERS = 50 -- Max number of visible players to process

local function CreateESPForPlayer(player)
    if player ~= LocalPlayer then
        ESPNames[player] = CreateESPName(player)
    end
end

local function RemoveESPForPlayer(player)
    if ESPNames[player] then
        ESPNames[player]:Remove()
        ESPNames[player] = nil
    end
end

for _, player in pairs(Players:GetPlayers()) do
    CreateESPForPlayer(player)
end

Players.PlayerAdded:Connect(CreateESPForPlayer)
Players.PlayerRemoving:Connect(RemoveESPForPlayer)

local function UpdateAllESP()
    local visiblePlayers = {}
    
    for player, espName in pairs(ESPNames) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < MAX_DISTANCE then
                table.insert(visiblePlayers, player)
            else
                espName.Visible = false
            end
        else
            espName.Visible = false
        end
    end

    for i = 1, math.min(#visiblePlayers, MAX_VISIBLE_PLAYERS) do
        UpdateESPName(visiblePlayers[i], ESPNames[visiblePlayers[i]])
    end
end

local updateInterval = 0.5 -- Update every 0.5 seconds
local lastUpdate = 0

RunService.RenderStepped:Connect(function(deltaTime)
    lastUpdate = lastUpdate + deltaTime
    if lastUpdate >= updateInterval then
        UpdateAllESP()
        lastUpdate = 0
    end
end)
