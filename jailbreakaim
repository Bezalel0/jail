local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- ESP Variables
local espEnabled = false
local espRefreshRate = 2 -- Refresh every 2 seconds

-- Aimbot Variables
getgenv().toggled = true --/ true & false
getgenv().old = getgenv().old or require(ReplicatedStorage.Module.RayCast).RayIgnoreNonCollideWithIgnoreList

-- ESP Functions
local function getPlayerTeam(player)
    local team = player.Team
    if team then
        if team.Name == "Police" then
            return "Police"
        elseif team.Name == "Criminal" then
            return "Criminal"
        elseif team.Name == "Prisoner" then
            return "Prisoner"
        end
    end
    return "Unknown"
end

local function getTeamColor(team)
    if team == "Police" then
        return Color3.new(0, 0, 1) -- Blue
    elseif team == "Criminal" then
        return Color3.new(1, 0, 0) -- Red
    elseif team == "Prisoner" then
        return Color3.new(1, 0.5, 0) -- Orange
    else
        return Color3.new(1, 1, 1) -- White for unknown
    end
end

local function createESP(player)
    local esp = Drawing.new("Text")
    esp.Visible = false
    esp.Center = true
    esp.Outline = true
    esp.Font = 2
    esp.Size = 13
    esp.Color = Color3.new(1, 1, 1)
    esp.OutlineColor = Color3.new(0, 0, 0)
    return esp
end

local espCache = {}

local function updateESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local esp = espCache[player]
            if not esp then
                esp = createESP(player)
                espCache[player] = esp
            end

            local vector, onScreen = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            if onScreen and espEnabled then
                local team = getPlayerTeam(player)
                esp.Color = getTeamColor(team)
                esp.Position = Vector2.new(vector.X, vector.Y)
                esp.Text = string.format("%s (%s)", player.Name, team)
                esp.Visible = true
            else
                esp.Visible = false
            end
        end
    end
end

local function refreshESP()
    for _, esp in pairs(espCache) do
        esp:Remove()
    end
    espCache = {}
end

-- Toggle ESP function
local function toggleESP()
    espEnabled = not espEnabled
    if not espEnabled then
        for _, esp in pairs(espCache) do
            esp.Visible = false
        end
    end
end

-- Aimbot Code (Untouched)
if getgenv().toggled then
    require(ReplicatedStorage.Module.RayCast).RayIgnoreNonCollideWithIgnoreList = function(...)
        local nearestDistance, nearestEnemy = 600, nil
        for i,v in pairs(Players:GetPlayers()) do
            if v.Team ~= LocalPlayer.Team and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                if (v.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < nearestDistance then
                    nearestDistance, nearestEnemy = (v.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude, v
                end
            end
        end
        local arg = {old(...)}
        if (tostring(getfenv(2).script) == "BulletEmitter" or tostring(getfenv(2).script) == "Taser") and nearestEnemy then
            arg[1] = nearestEnemy.Character.HumanoidRootPart
            arg[2] = nearestEnemy.Character.HumanoidRootPart.Position
        end
        return unpack(arg)
    end
else
    require(ReplicatedStorage.Module.RayCast).RayIgnoreNonCollideWithIgnoreList = getgenv().old
end

-- Main update loop for ESP
RunService.RenderStepped:Connect(updateESP)

-- Refresh ESP every 2 seconds
spawn(function()
    while wait(espRefreshRate) do
        if espEnabled then
            refreshESP()
        end
    end
end)

-- Clean up ESP when players leave
Players.PlayerRemoving:Connect(function(player)
    local esp = espCache[player]
    if esp then
        esp:Remove()
        espCache[player] = nil
    end
end)

-- Example of how to toggle ESP (you can bind this to a key or GUI button)
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.E then
        toggleESP()
    end
end)
